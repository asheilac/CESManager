// <auto-generated />
using System;
using CESManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CESManager.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201120113010_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CESManager.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDateTime = new DateTime(2020, 11, 19, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            StartDateTime = new DateTime(2020, 11, 19, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDateTime = new DateTime(2020, 11, 19, 4, 30, 0, 0, DateTimeKind.Unspecified),
                            StartDateTime = new DateTime(2020, 11, 19, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CESManager.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 169, 60, 148, 90, 194, 63, 110, 252, 103, 36, 102, 154, 27, 200, 48, 37, 188, 59, 26, 34, 63, 160, 238, 218, 149, 165, 61, 113, 27, 102, 49, 210, 13, 99, 93, 208, 16, 165, 245, 111, 95, 187, 114, 107, 229, 145, 145, 251, 4, 128, 99, 175, 112, 242, 144, 144, 253, 184, 237, 9, 184, 41, 25, 21 },
                            PasswordSalt = new byte[] { 168, 214, 215, 75, 87, 84, 178, 153, 18, 54, 180, 124, 72, 245, 107, 249, 247, 94, 159, 166, 176, 0, 18, 80, 116, 180, 189, 84, 129, 136, 214, 242, 178, 5, 31, 12, 246, 150, 24, 69, 37, 239, 153, 194, 187, 49, 104, 183, 189, 14, 81, 25, 113, 153, 1, 9, 186, 57, 15, 181, 159, 109, 248, 238, 173, 169, 153, 177, 145, 183, 127, 61, 116, 40, 220, 126, 10, 114, 11, 1, 4, 103, 22, 255, 232, 192, 112, 208, 168, 56, 117, 87, 0, 127, 46, 218, 156, 54, 54, 8, 54, 45, 135, 161, 252, 16, 83, 171, 63, 201, 37, 122, 232, 44, 46, 151, 6, 69, 22, 31, 6, 73, 50, 218, 125, 180, 172, 12 },
                            Username = "User1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 169, 60, 148, 90, 194, 63, 110, 252, 103, 36, 102, 154, 27, 200, 48, 37, 188, 59, 26, 34, 63, 160, 238, 218, 149, 165, 61, 113, 27, 102, 49, 210, 13, 99, 93, 208, 16, 165, 245, 111, 95, 187, 114, 107, 229, 145, 145, 251, 4, 128, 99, 175, 112, 242, 144, 144, 253, 184, 237, 9, 184, 41, 25, 21 },
                            PasswordSalt = new byte[] { 168, 214, 215, 75, 87, 84, 178, 153, 18, 54, 180, 124, 72, 245, 107, 249, 247, 94, 159, 166, 176, 0, 18, 80, 116, 180, 189, 84, 129, 136, 214, 242, 178, 5, 31, 12, 246, 150, 24, 69, 37, 239, 153, 194, 187, 49, 104, 183, 189, 14, 81, 25, 113, 153, 1, 9, 186, 57, 15, 181, 159, 109, 248, 238, 173, 169, 153, 177, 145, 183, 127, 61, 116, 40, 220, 126, 10, 114, 11, 1, 4, 103, 22, 255, 232, 192, 112, 208, 168, 56, 117, 87, 0, 127, 46, 218, 156, 54, 54, 8, 54, 45, 135, 161, 252, 16, 83, 171, 63, 201, 37, 122, 232, 44, 46, 151, 6, 69, 22, 31, 6, 73, 50, 218, 125, 180, 172, 12 },
                            Username = "User2"
                        });
                });

            modelBuilder.Entity("CESManager.Models.Session", b =>
                {
                    b.HasOne("CESManager.Models.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CESManager.Models.User", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
